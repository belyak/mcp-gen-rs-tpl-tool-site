name: Deploy Jekyll to GitHub Pages

on:
  push:
    branches: [ main, master ]
    paths:
      - 'README.md'
      - 'docs/**'
      - 'jekyll-site/**'
      - '.github/workflows/deploy-jekyll.yml'
  workflow_dispatch:
  schedule:
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00 UTC –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ GitHub
    - cron: '0 0 * * *'

permissions:
  contents: read
  pages: write
  id-token: write

# –†–∞–∑—Ä–µ—à–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    outputs:
      pages-url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      - name: Create Jekyll structure
        run: |
          echo "üèóÔ∏è Creating Jekyll site structure..."
          mkdir -p jekyll-site
          cd jekyll-site
          
          # Create _config.yml
          cat > _config.yml << 'EOF'
          title: "MCP Rust Template Tool"
          description: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Model Context Protocol (MCP) —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ Rust —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤ Claude Desktop"
          baseurl: "/mcp-claude-stdio-template"
          url: "https://${{ github.repository_owner }}.github.io"
          
          repository: "${{ github.repository }}"
          github_username: ${{ github.repository_owner }}
          
          theme: jekyll-theme-cayman
          remote_theme: pages-themes/cayman@v0.2.0
          
          plugins:
            - jekyll-feed
            - jekyll-sitemap
            - jekyll-seo-tag
            - jekyll-relative-links
            - jekyll-optional-front-matter
            - jekyll-readme-index
            - jekyll-default-layout
            - jekyll-titles-from-headings
          
          markdown: kramdown
          kramdown:
            input: GFM
            syntax_highlighter: rouge
            syntax_highlighter_opts:
              css_class: 'highlight'
          
          highlighter: rouge
          
          lang: ru-RU
          author: "Andrei Beliak"
          
          social_links:
            github: ${{ github.repository_owner }}
          
          exclude:
            - target/
            - test-gen*/
            - Cargo.lock
            - "*.log"
            - "*.jsonl"
            - Gemfile
            - Gemfile.lock
            - node_modules
            - vendor/
            - README.md.old
            - test_template.sh
            - install_mcp.sh
            - justfile
            - LICENSE
          
          include:
            - .htaccess
            - _pages
          
          sass:
            sass_dir: _sass
            style: compressed
          
          timezone: Europe/Moscow
          
          # GitHub metadata
          github: [metadata]
          EOF
          
          # Create Gemfile
          cat > Gemfile << 'EOF'
          source "https://rubygems.org"
          
          gem "jekyll", "~> 4.3.0"
          gem "jekyll-theme-cayman"
          gem "jekyll-feed"
          gem "jekyll-sitemap"
          gem "jekyll-seo-tag"
          gem "jekyll-relative-links"
          gem "jekyll-optional-front-matter"
          gem "jekyll-readme-index"
          gem "jekyll-default-layout"
          gem "jekyll-titles-from-headings"
          gem "jekyll-github-metadata"
          
          group :jekyll_plugins do
            gem "jekyll-feed"
            gem "jekyll-sitemap"
            gem "jekyll-seo-tag"
            gem "jekyll-relative-links"
            gem "jekyll-optional-front-matter"
            gem "jekyll-readme-index"
            gem "jekyll-default-layout"
            gem "jekyll-titles-from-headings"
            gem "jekyll-github-metadata"
          end
          
          platforms :mingw, :x64_mingw, :mswin, :jruby do
            gem "tzinfo", ">= 1", "< 3"
            gem "tzinfo-data"
          end
          
          gem "wdm", "~> 0.1.1", :platforms => [:mingw, :x64_mingw, :mswin]
          gem "http_parser.rb", "~> 0.6.0", :platforms => [:jruby]
          EOF

      - name: Create Jekyll content
        run: |
          cd jekyll-site
          
          # Create directories
          mkdir -p _layouts _includes _sass assets/css assets/js _data docs
          
          # Create enhanced index.md
          cat > index.md << 'EOF'
          ---
          layout: default
          title: "MCP Rust Template Tool"
          description: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Model Context Protocol (MCP) —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ Rust"
          ---
          
          # MCP Rust Template Tool
          
          ![Build Status](https://github.com/${{ github.repository }}/actions/workflows/ci.yml/badge.svg)
          ![License](https://img.shields.io/github/license/${{ github.repository }})
          ![GitHub stars](https://img.shields.io/github/stars/${{ github.repository }}?style=social)
          ![GitHub release](https://img.shields.io/github/v/release/${{ github.repository }})
          
          <div class="hero-section">
            <h2>üöÄ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è MCP —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ Rust</h2>
            <p class="lead">–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π Model Context Protocol —Å–µ—Ä–≤–µ—Ä —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –≤ Claude Desktop</p>
            
            <div class="buttons">
              <a href="https://github.com/${{ github.repository }}" class="btn btn-primary">
                üìÅ GitHub Repository
              </a>
              <a href="#quick-start" class="btn btn-secondary">
                üèÅ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç
              </a>
              <a href="/docs/architecture" class="btn btn-secondary">
                üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
              </a>
            </div>
          </div>
          
          ## ‚ú® –ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
          
          <div class="features-grid">
            <div class="feature">
              <h3>üîß –ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</h3>
              <p>–ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π MCP —Å–µ—Ä–≤–µ—Ä –∏–∑ –∫–æ—Ä–æ–±–∫–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤—Å–µ—Ö –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª–∞</p>
            </div>
            
            <div class="feature">
              <h3>üìã JSON-RPC 2.0</h3>
              <p>–ü–æ–ª–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏ MCP —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –≤—Å–µ—Ö —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤</p>
            </div>
            
            <div class="feature">
              <h3>üõ†Ô∏è –¢—Ä–∏ —Ç–∏–ø–∞ —Ñ—É–Ω–∫—Ü–∏–π</h3>
              <p>Prompts, Resources –∏ Tools - –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–æ—â–Ω—ã—Ö AI –∞–≥–µ–Ω—Ç–æ–≤</p>
            </div>
            
            <div class="feature">
              <h3>üß™ –ê–≤—Ç–æ—Ç–µ—Å—Ç—ã</h3>
              <p>–í—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, CI/CD pipeline –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —à–∞–±–ª–æ–Ω–∞</p>
            </div>
            
            <div class="feature">
              <h3>ÔøΩÔøΩ Claude Desktop</h3>
              <p>–ì–æ—Ç–æ–≤–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Claude Desktop –Ω–∞ macOS —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π</p>
            </div>
            
            <div class="feature">
              <h3>‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</h3>
              <p>–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–±–æ—Ä–∫–∞ –¥–ª—è production —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ–º —Ä–µ—Å—É—Ä—Å–æ–≤</p>
            </div>
          </div>
          
          ## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç {#quick-start}
          
          ### –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
          
          ```bash
          # 1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ cargo-generate
          cargo install cargo-generate
          
          # 2. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏–∑ —à–∞–±–ª–æ–Ω–∞
          cargo generate --git https://github.com/${{ github.repository }}
          
          # 3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
          cd your-project-name
          
          # 4. –°–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç
          cargo build --release
          
          # 5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã
          cargo test
          ```
          
          ### –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Claude Desktop
          
          ```bash
          # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
          ./install_mcp.sh
          ```
          
          ## üìä –ü—Ä–æ–µ–∫—Ç–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
          
          <div class="stats-grid">
            <div class="stat-card">
              <h4>‚≠ê GitHub Stars</h4>
              <div class="stat-number" id="github-stars">Loading...</div>
            </div>
            <div class="stat-card">
              <h4>üç¥ Forks</h4>
              <div class="stat-number" id="github-forks">Loading...</div>
            </div>
            <div class="stat-card">
              <h4>üêõ Issues</h4>
              <div class="stat-number" id="github-issues">Loading...</div>
            </div>
            <div class="stat-card">
              <h4>üìä Language</h4>
              <div class="stat-number">Rust 95%</div>
            </div>
          </div>
          
          ## üõ†Ô∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
          
          ```mermaid
          graph TB
              A[Claude Desktop] -->|JSON-RPC| B[MCP Server]
              B --> C[Router]
              C --> D[Prompts Handler]
              C --> E[Resources Handler] 
              C --> F[Tools Handler]
              C --> G[Utilities Handler]
              
              D --> H[prompts.json]
              E --> I[resources.json]
              F --> J[tools.json]
          ```
          
          ## üéØ –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
          
          ### –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
          
          ```rust
          pub async fn current_time(request: CurrentTimeRequest) -> HandlerResult<CallToolResult> {
              let city = request.city.unwrap_or_else(|| "UTC".to_string());
              let result = format!("Current time in {}: {}", city, chrono::Local::now().to_rfc2822());
              
              Ok(CallToolResult {
                  content: vec![CallToolResultContent::Text { text: result }],
                  is_error: false,
              })
          }
          ```
          
          ### –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
          
          ```json
          {
            "name": "get_current_time_in_city",
            "description": "–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ",
            "inputSchema": {
              "type": "object",
              "properties": {
                "city": {
                  "type": "string",
                  "description": "–ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞"
                }
              },
              "required": ["city"]
            }
          }
          ```
          
          ## ÔøΩÔøΩ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
          
          <div class="doc-grid">
            <a href="/docs/architecture" class="doc-card">
              <h4>üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞</h4>
              <p>–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</p>
            </a>
            
            <a href="/docs/configuration" class="doc-card">
              <h4>‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è</h4>
              <p>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤, —Ä–µ—Å—É—Ä—Å–æ–≤ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤</p>
            </a>
            
            <a href="/docs/integration" class="doc-card">
              <h4>üîó –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è</h4>
              <p>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Claude Desktop –∏ –¥—Ä—É–≥–∏–º –∫–ª–∏–µ–Ω—Ç–∞–º</p>
            </a>
            
            <a href="/docs/development" class="doc-card">
              <h4>üõ†Ô∏è –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞</h4>
              <p>–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏</p>
            </a>
          </div>
          
          ## üìà –î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞
          
          - [x] **v0.1.0** - –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª MCP —Å–µ—Ä–≤–µ—Ä–∞
          - [ ] **v0.2.0** - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
          - [ ] **v0.3.0** - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
          - [ ] **v0.4.0** - –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
          - [ ] **v0.5.0** - –°–∏—Å—Ç–µ–º–∞ –ø–ª–∞–≥–∏–Ω–æ–≤
          
          ## ü§ù –°–æ–æ–±—â–µ—Å—Ç–≤–æ
          
          <div class="community-grid">
            <div class="community-card">
              <h4>üí¨ –û–±—Å—É–∂–¥–µ–Ω–∏—è</h4>
              <p>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –æ–±—Å—É–∂–¥–µ–Ω–∏—è–º –Ω–∞ GitHub</p>
              <a href="https://github.com/${{ github.repository }}/discussions">Discussions ‚Üí</a>
            </div>
            
            <div class="community-card">
              <h4>üêõ –°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ</h4>
              <p>–ù–∞—à–ª–∏ –±–∞–≥? –°–æ–∑–¥–∞–π—Ç–µ issue –Ω–∞ GitHub</p>
              <a href="https://github.com/${{ github.repository }}/issues">Issues ‚Üí</a>
            </div>
            
            <div class="community-card">
              <h4>ü§ù –í–Ω–µ—Å—Ç–∏ –≤–∫–ª–∞–¥</h4>
              <p>–ü–æ–º–æ–≥–∏—Ç–µ —É–ª—É—á—à–∏—Ç—å –ø—Ä–æ–µ–∫—Ç</p>
              <a href="https://github.com/${{ github.repository }}/blob/main/CONTRIBUTING.md">Contributing ‚Üí</a>
            </div>
          </div>
          
          ---
          
          <div class="footer-cta">
            <h3>–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?</h3>
            <p>–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π MCP —Å–µ—Ä–≤–µ—Ä –∑–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç</p>
            <a href="https://github.com/${{ github.repository }}" class="btn btn-primary btn-large">
              üöÄ –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
            </a>
          </div>
          
          <script>
          // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ GitHub
          async function loadGitHubStats() {
            try {
              const response = await fetch('https://api.github.com/repos/${{ github.repository }}');
              const data = await response.json();
              
              document.getElementById('github-stars').textContent = data.stargazers_count || '0';
              document.getElementById('github-forks').textContent = data.forks_count || '0';
              document.getElementById('github-issues').textContent = data.open_issues_count || '0';
            } catch (error) {
              console.error('Failed to load GitHub stats:', error);
              document.getElementById('github-stars').textContent = 'N/A';
              document.getElementById('github-forks').textContent = 'N/A';
              document.getElementById('github-issues').textContent = 'N/A';
            }
          }
          
          // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
          document.addEventListener('DOMContentLoaded', loadGitHubStats);
          </script>
          EOF
          
          # Copy README content if exists
          if [ -f "../README.md" ]; then
            echo "üìù Converting README.md to Jekyll format..."
            # Convert existing README to Jekyll page
            cat > docs/readme.md << 'EOF'
          ---
          layout: default
          title: "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π README"
          description: "–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞"
          ---
          
          EOF
            cat "../README.md" >> docs/readme.md
          fi

      - name: Create enhanced CSS
        run: |
          cd jekyll-site
          
          # Create enhanced stylesheet
          cat > assets/css/style.scss << 'EOF'
          ---
          ---
          
          @import "{{ site.theme }}";
          
          // Color variables
          :root {
            --primary-color: #28a745;
            --secondary-color: #6c757d;
            --accent-color: #007bff;
            --background-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --text-color: #333;
            --border-color: #dee2e6;
            --hover-shadow: 0 4px 8px rgba(0,0,0,0.1);
          }
          
          // Hero section
          .hero-section {
            text-align: center;
            margin: 2rem 0;
            padding: 3rem 2rem;
            background: var(--background-gradient);
            color: white;
            border-radius: 15px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
            backdrop-filter: blur(10px);
            
            h2 {
              margin-bottom: 1rem;
              font-size: 2.5rem;
              font-weight: 700;
            }
            
            .lead {
              font-size: 1.3rem;
              margin-bottom: 2rem;
              opacity: 0.95;
            }
          }
          
          // Button styles
          .buttons {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
            margin-top: 2rem;
          }
          
          .btn {
            display: inline-block;
            padding: 0.875rem 2rem;
            border-radius: 8px;
            text-decoration: none;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            
            &:hover {
              transform: translateY(-3px);
              box-shadow: var(--hover-shadow);
              text-decoration: none;
            }
          }
          
          .btn-primary {
            background-color: var(--primary-color);
            color: white;
            
            &:hover {
              background-color: darken(var(--primary-color), 10%);
            }
          }
          
          .btn-secondary {
            background-color: var(--secondary-color);
            color: white;
            
            &:hover {
              background-color: darken(var(--secondary-color), 10%);
            }
          }
          
          .btn-large {
            font-size: 1.2rem;
            padding: 1.2rem 2.5rem;
          }
          
          // Grid layouts
          .features-grid, .doc-grid, .community-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
            margin: 3rem 0;
          }
          
          .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin: 2rem 0;
          }
          
          // Card styles
          .feature, .doc-card, .community-card, .stat-card {
            padding: 2rem;
            border: 1px solid var(--border-color);
            border-radius: 12px;
            background: #ffffff;
            transition: all 0.3s ease;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
            
            &:hover {
              transform: translateY(-5px);
              box-shadow: var(--hover-shadow);
              border-color: var(--accent-color);
            }
            
            h3, h4 {
              margin-top: 0;
              margin-bottom: 1rem;
              color: var(--accent-color);
            }
            
            p {
              margin-bottom: 1rem;
              line-height: 1.6;
            }
          }
          
          .doc-card, .community-card {
            text-decoration: none;
            color: inherit;
            display: block;
            
            a {
              color: var(--accent-color);
              text-decoration: none;
              font-weight: 600;
              
              &:hover {
                text-decoration: underline;
              }
            }
          }
          
          .stat-card {
            text-align: center;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            
            h4 {
              font-size: 0.9rem;
              color: var(--secondary-color);
              margin-bottom: 0.5rem;
            }
            
            .stat-number {
              font-size: 2rem;
              font-weight: 700;
              color: var(--accent-color);
            }
          }
          
          // Footer CTA
          .footer-cta {
            text-align: center;
            margin: 4rem 0;
            padding: 3rem 2rem;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border-radius: 15px;
            
            h3 {
              margin-bottom: 1rem;
              color: var(--text-color);
            }
            
            p {
              margin-bottom: 2rem;
              color: var(--secondary-color);
              font-size: 1.1rem;
            }
          }
          
          // Code blocks
          .highlight {
            border-radius: 8px;
            margin: 1.5rem 0;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
          }
          
          pre {
            padding: 1.5rem;
            border-radius: 8px;
            font-size: 0.9rem;
            line-height: 1.5;
          }
          
          // Responsive design
          @media (max-width: 768px) {
            .hero-section {
              padding: 2rem 1rem;
              
              h2 {
                font-size: 2rem;
              }
              
              .lead {
                font-size: 1.1rem;
              }
            }
            
            .buttons {
              flex-direction: column;
              align-items: center;
            }
            
            .btn {
              min-width: 200px;
            }
            
            .features-grid, .doc-grid, .community-grid {
              grid-template-columns: 1fr;
              gap: 1.5rem;
            }
            
            .stats-grid {
              grid-template-columns: repeat(2, 1fr);
            }
          }
          
          // Badges
          .badge {
            display: inline-block;
            padding: 0.35rem 0.65rem;
            font-size: 0.75rem;
            font-weight: 700;
            line-height: 1;
            text-align: center;
            white-space: nowrap;
            vertical-align: baseline;
            border-radius: 0.375rem;
            margin: 0.2rem;
          }
          
          // Animations
          @keyframes fadeInUp {
            from {
              opacity: 0;
              transform: translateY(30px);
            }
            to {
              opacity: 1;
              transform: translateY(0);
            }
          }
          
          .feature, .doc-card, .community-card, .stat-card {
            animation: fadeInUp 0.6s ease-out;
          }
          
          // Dark mode support
          @media (prefers-color-scheme: dark) {
            :root {
              --text-color: #e9ecef;
              --border-color: #495057;
            }
            
            .feature, .doc-card, .community-card, .stat-card {
              background: #2d3748;
              color: #e9ecef;
              border-color: #4a5568;
            }
            
            .footer-cta {
              background: linear-gradient(135deg, #2d3748 0%, #4a5568 100%);
              color: #e9ecef;
            }
          }
          EOF

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies and build
        run: |
          cd jekyll-site
          bundle install
          bundle exec jekyll build --verbose
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./jekyll-site/_site

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Notify job
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]
    if: always()
    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy.result }}" == "success" ]; then
            echo "‚úÖ Jekyll site successfully deployed to GitHub Pages!"
            echo "üåê Site URL: ${{ needs.build.outputs.pages-url }}"
          else
            echo "‚ùå Deployment failed!"
            exit 1
          fi
